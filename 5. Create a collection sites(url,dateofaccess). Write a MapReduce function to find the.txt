5 Create a collection sites(url,dateofaccess). Write a MapReduce function to find the
no. of times a site was accessed in a month.
db.sites.insertMany([
{ url: "https://example.com", dateofaccess: new Date("2024-05-01") },
{ url: "https://example.com", dateofaccess: new Date("2024-05-03") },
{ url: "https://example.com", dateofaccess: new Date("2024-06-04") },
{ url: "https://abc.com", dateofaccess: new Date("2024-05-04") },
{ url: "https://abc.com", dateofaccess: new Date("2024-05-05") },
{ url: "https://abc.com", dateofaccess: new Date("2024-06-07") }
])
var mapFunction = function() {
var month = this.dateofaccess.getMonth() + 1; // 0-based
var year = this.dateofaccess.getFullYear();
var key = this.url + "-" + year + "-" + (month < 10 ? "0" + month : month);
emit(key, 1);
};
var reduceFunction = function(key, values) {
return Array.sum(values);
};
db.sites.mapReduce(
mapFunction,
reduceFunction,
{
out: "site_access_count"
}
);

db.site_access_count.find().pretty();